buildscript {
    ext.kotlinVersion = "1.3.50"
    ext.jooqPluginVersion = "3.0.3"
    ext.shadowPluginVersion = "5.1.0"
    ext.protobufPluginVersion = "0.8.5"
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:$protobufPluginVersion"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadowPluginVersion"
        classpath "nu.studer:gradle-jooq-plugin:$jooqPluginVersion"
    }
}

plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id "com.google.protobuf" version "$protobufPluginVersion"
    id "com.github.johnrengelman.shadow" version "$shadowPluginVersion"
    id "nu.studer.jooq" version "$jooqPluginVersion"
    id "org.flywaydb.flyway" version "6.0.0"
}

group = "burstcoin"
description = "Burstcoin Reference Software"
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
    maven {
        url = "https://jitpack.io"
    }

    maven {
        url = "http://repo.maven.apache.org/maven2"
    }
}

def jettyVersion = "9.4.19.v20190610"
def burstkit4jVersion = "v0.12.2"
def rxJavaVersion = "2.2.10"
def joclVersion = "2.0.1"
def bouncyCastleVersion = "1.62"
def gsonVersion = "2.8.5"
def slf4jVersion = "1.7.26"
def mariaDbVersion = "2.4.3"
def hikariVersion = "3.3.1"
def h2Version = "1.4.199"
def zxingVersion = "3.4.0"
def protocVersion = "3.7.1"
def grpcVersion = "1.22.1"
def flywayVersion = "5.2.4"
def owaspVersion = "1.2.2"
def jooqVersion = "3.11.12"
def webUpnpVersion = "0.1.4"
def ehCacheVersion = "3.7.1"
def jUnitVersion = "5.2.0"
def jUnitRunnerVersion = "1.4.2"
def mockitoVersion = "3.0.0"
def mockitoKotlinVersion = "2.1.0"
def mockkVersion = "1.9.3"
def httpClientVersion = "4.5.9"

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    compile "com.github.burst-apps-team:burstkit4j:$burstkit4jVersion"
    compile "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    compile "org.jocl:jocl:$joclVersion"
    compile "org.bouncycastle:bcprov-jdk15on:$bouncyCastleVersion"
    compile "com.google.code.gson:gson:$gsonVersion"
    compile "org.eclipse.jetty:jetty-server:$jettyVersion"
    compile "org.eclipse.jetty:jetty-servlet:$jettyVersion"
    compile "org.eclipse.jetty:jetty-servlets:$jettyVersion"
    compile "org.eclipse.jetty:jetty-rewrite:$jettyVersion"
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.slf4j:slf4j-jdk14:$slf4jVersion"
    compile "org.mariadb.jdbc:mariadb-java-client:$mariaDbVersion"
    compile "com.zaxxer:HikariCP:$hikariVersion"
    compile "com.h2database:h2:$h2Version"
    compile "com.google.zxing:core:$zxingVersion"
    compile "com.google.zxing:javase:$zxingVersion"
    compile "io.grpc:grpc-netty-shaded:$grpcVersion"
    compile "io.grpc:grpc-protobuf:$grpcVersion"
    compile "io.grpc:grpc-stub:$grpcVersion"
    compile "org.flywaydb:flyway-core:$flywayVersion"
    compile "org.owasp.encoder:encoder:$owaspVersion"
    compile "org.jooq:jooq:$jooqVersion"
    compile "org.jooq:jooq-meta:$jooqVersion"
    compile "org.jooq:jooq-codegen:$jooqVersion"
    compile "org.bitlet:weupnp:$webUpnpVersion"
    compile "org.ehcache:ehcache:$ehCacheVersion"
    testCompile "org.junit.platform:junit-platform-runner:$jUnitRunnerVersion"
    testCompile "org.junit.jupiter:junit-jupiter-engine:$jUnitVersion"
    testCompile "org.junit.vintage:junit-vintage-engine:$jUnitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-params:$jUnitVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.mockito:mockito-inline:$mockitoVersion"
    testCompile "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    testCompile "io.mockk:mockk:$mockkVersion"
    testCompile "org.apache.httpcomponents:httpclient:$httpClientVersion"
    testCompile "io.grpc:grpc-testing:$grpcVersion"
}

sourceSets {
    main {
        java {
            exclude { fileTreeElement ->
                System.getProperty("headless") == "true" && fileTreeElement.file == ("$projectDir/src/brs/BurstGUI.java" as File)
            }
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.onlyIf {System.getProperty("runProtoc") == "true"}
        }
        all()*.plugins {
            grpc {
                outputSubDir = "java"
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src/main/java"
}

def dbUrl = "jdbc:mariadb://localhost:3306/burstwallet"
def dbUsername = "root"

flyway {
    url = dbUrl
    user = dbUsername
    locations = ["filesystem:"+project.projectDir.toString()+"/resources/db/migration_mariadb"]
}

jooq {
    version = jooqVersion
    edition = "OSS"
    burstcoin(sourceSets.main) {
        jdbc {
            url = dbUrl
            user = dbUsername
        }
        generator {
            name = "org.jooq.codegen.JavaGenerator"
            database {
                includes = ".*"
                name = "org.jooq.meta.mariadb.MariaDBDatabase"
                inputSchema = "burstwallet"
                outputSchema = "DB"
                forcedTypes {
                    forcedType {
                        name = "BOOLEAN"
                        expression = ".*\\.(.*\\.LATEST|AT_STATE\\.FREEZE_WHEN_SAME_BALANCE|GOODS\\.DELISTED|TRANSACTION\\.(HAS_MESSAGE|HAS_ENCRYPTED_MESSAGE|HAS_PUBLIC_KEY_ANNOUNCEMENT|HAS_ENCRYPTTOSELF_MESSAGE)|PURCHASE\\.(PENDING|HAS_FEEDBACK_NOTES|HAS_PUBLIC_FEEDBACKS))"
                        types = ".*"
                    }
                }
            }
            target {
                packageName = "brs.schema"
                directory = "src/main/java"
            }
        }
    }
}
generateBurstcoinJooqSchemaSource.dependsOn flywayMigrate
generateBurstcoinJooqSchemaSource.onlyIf {System.getProperty("runJooq") == "true"}
flywayMigrate.onlyIf {System.getProperty("runJooq") == "true"}

task removePackage(type: Delete) {
    delete file("$projectDir/dist")
}

task copyPackageFiles {
    doLast {
        copy {
            from("$projectDir/build/libs/burstcoin-all.jar") {
                rename "burstcoin-all.jar", "burst.jar"
            }
            from "$projectDir/Burst_Wallet.url"
            from "$projectDir/genscoop.cl"
            from "$projectDir/init-mysql.sql"
            from "$projectDir/LICENSE.txt"
            from "$projectDir/README.md"
            from "$projectDir/burst.cmd"
            from "$projectDir/burst.sh"
            into "$projectDir/dist/tmp/"
        }
        copy {
            from "$projectDir/html/"
            into "$projectDir/dist/tmp/html/"
        }
        copy {
            from "$projectDir/conf/brs-default.properties"
            from "$projectDir/conf/logging-default.properties"
            into "$projectDir/dist/tmp/conf/"
        }
    }
}

task zipPackageFiles(type: Zip) {
    from "$projectDir/dist/tmp"
    include "*"
    include "*/*"
    archiveName "burstcoin.zip"
    destinationDir(file("$projectDir/dist"))
}

task buildPackage {
    dependsOn removePackage
    dependsOn shadowJar
    dependsOn copyPackageFiles
    dependsOn zipPackageFiles
    copyPackageFiles.mustRunAfter(removePackage)
    zipPackageFiles.mustRunAfter(copyPackageFiles)
}
